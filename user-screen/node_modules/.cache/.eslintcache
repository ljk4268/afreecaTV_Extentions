[{"/Users/a1/Desktop/GitHub/afreecaTV_Extentions/user-screen/src/index.tsx":"1","/Users/a1/Desktop/GitHub/afreecaTV_Extentions/user-screen/src/App.tsx":"2","/Users/a1/Desktop/GitHub/afreecaTV_Extentions/user-screen/src/api/shareAPI.js":"3","/Users/a1/Desktop/GitHub/afreecaTV_Extentions/user-screen/src/pages/Home.tsx":"4","/Users/a1/Desktop/GitHub/afreecaTV_Extentions/user-screen/src/api/utils/instance.js":"5","/Users/a1/Desktop/GitHub/afreecaTV_Extentions/user-screen/src/components/ShareItem.tsx":"6"},{"size":317,"mtime":1700290784223,"results":"7","hashOfConfig":"8"},{"size":2027,"mtime":1701343349515,"results":"9","hashOfConfig":"8"},{"size":219,"mtime":1700900052043,"results":"10","hashOfConfig":"8"},{"size":942,"mtime":1700900124638,"results":"11","hashOfConfig":"8"},{"size":221,"mtime":1700650519354,"results":"12","hashOfConfig":"8"},{"size":1968,"mtime":1701168349686,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},"12ybnhy",{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"17"},"/Users/a1/Desktop/GitHub/afreecaTV_Extentions/user-screen/src/index.tsx",[],[],["36","37","38","39","40","41"],"/Users/a1/Desktop/GitHub/afreecaTV_Extentions/user-screen/src/App.tsx",["42"],[],"import 'bootstrap/dist/css/bootstrap.min.css'\nimport './App.css'\nimport { createContext, useEffect, useReducer } from 'react'\nimport { Routes, Route, useNavigate } from 'react-router-dom'\n\n// components\nimport Home from './pages/Home'\n\n// types\nimport {\n  IAuthInfo,\n  IBroadInfo,\n  IData,\n  IAction,\n} from './interface/commonInterface'\nimport { getItems } from './api/shareAPI'\n\n//reducer\nconst reducer = (state: IData[], action: IAction) => {\n  let newState: IData[] = []\n  switch (action.type) {\n    case 'FETCH_SUCCESS':\n      newState = [...action.payload]\n      break\n    default:\n      return state\n  }\n  return newState\n}\n\n//context\nexport const ShareDataContext = createContext<IData[]>([])\nexport const ShareBroadNoContext = createContext<number>(0)\nexport const ShareDispatchContext = createContext<any>(undefined)\n\nfunction App() {\n  const [data, dispatch] = useReducer(reducer, [])\n  const navigate = useNavigate()\n\n  const fetchData = async (broadNo: number) => {\n    try {\n      const response = await getItems({ broadcastNo: broadNo })\n      response.data.shareList.forEach((d: IData) => {\n        d.tipText = d.tipText === '' ? '내용없음' : d.tipText\n      })\n      dispatch({ type: 'FETCH_SUCCESS', payload: response.data.shareList })\n    } catch (error) {\n      console.error('Error fetching data:', error)\n    }\n  }\n\n  useEffect(() => {\n    const SDK = window.AFREECA.ext\n    const extensionSDK = SDK()\n    extensionSDK.handleInitialization(\n      (authInfo: IAuthInfo, broadInfo: IBroadInfo) => {\n        if (broadInfo) {\n          fetchData(broadInfo.broadNo)\n          navigate(`/${broadInfo.broadNo}`)\n        }\n      }\n    )\n  }, [])\n\n  return (\n    <ShareDataContext.Provider value={data}>\n      <ShareDispatchContext.Provider value={{ fetchData }}>\n        <div className=\"App\">\n          <Routes>\n            <Route path=\"/:broadNo\" element={<Home />}></Route>\n          </Routes>\n        </div>\n      </ShareDispatchContext.Provider>\n    </ShareDataContext.Provider>\n  )\n}\n\nexport default App\n","/Users/a1/Desktop/GitHub/afreecaTV_Extentions/user-screen/src/api/shareAPI.js",[],[],["43","44","45","46","47","48"],"/Users/a1/Desktop/GitHub/afreecaTV_Extentions/user-screen/src/pages/Home.tsx",[],[],"/Users/a1/Desktop/GitHub/afreecaTV_Extentions/user-screen/src/api/utils/instance.js",[],[],"/Users/a1/Desktop/GitHub/afreecaTV_Extentions/user-screen/src/components/ShareItem.tsx",["49","50"],[],"import { useEffect, useState } from 'react'\n\n// components\nimport Accordion from 'react-bootstrap/Accordion'\n\n// types\nimport { IData } from '../interface/commonInterface'\n\n// API\nimport { getImage } from '../api/shareAPI'\nimport { ClassNames } from '@emotion/react'\n\nconst ShareItem = ({\n  shareId,\n  broadcastNo,\n  savedImgPath,\n  srcImg,\n  linkText,\n  title,\n  tipText,\n}: IData) => {\n  const [imageDataUrl, setImageDataUrl] = useState<string | null>(null)\n  const goSite = (linkText: string) => {\n    if (!linkText) return\n    window.open(linkText, '_blank')\n  }\n  const fetchImages = async () => {\n    const params = {\n      srcImg: srcImg,\n      savedImgPath: savedImgPath,\n    }\n    try {\n      const res = await getImage(params)\n      if (res.status) {\n        const url = window.URL.createObjectURL(\n          new Blob([res.data], { type: res.headers['content-type'] })\n        )\n        setImageDataUrl(url)\n      }\n    } catch (error) {\n      console.error('Error:', error)\n    }\n  }\n\n  useEffect(() => {\n    if (srcImg && savedImgPath) {\n      fetchImages()\n    }\n  }, [])\n\n  return (\n    <div className=\"ShareItem\">\n      <div className=\"contents\">\n        <Accordion.Item eventKey={`${shareId}`}>\n          <Accordion.Header>\n            <div\n              className=\"img_wrapper\"\n              onClick={(event) => {\n                event.stopPropagation()\n                goSite(linkText)\n              }}\n            >\n              {imageDataUrl ? (\n                <img src={imageDataUrl} alt={srcImg} />\n              ) : (\n                <div className=\"defaultIMG\"></div>\n              )}\n            </div>\n            <div className=\"shareTitle\">{title}</div>\n          </Accordion.Header>\n          <Accordion.Body>\n            <div style={{ whiteSpace: 'pre-wrap' }} className=\"text_box\">\n              {tipText}\n            </div>\n          </Accordion.Body>\n        </Accordion.Item>\n      </div>\n    </div>\n  )\n}\n\nexport default ShareItem\n",{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":63,"column":6,"nodeType":"65","endLine":63,"endColumn":8,"suggestions":"66"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"67","severity":1,"message":"68","line":11,"column":10,"nodeType":"69","messageId":"70","endLine":11,"endColumn":20},{"ruleId":"63","severity":1,"message":"71","line":49,"column":6,"nodeType":"65","endLine":49,"endColumn":8,"suggestions":"72"},"dot-location",[],"new-parens",[],"no-mixed-operators",[],"no-new-object",["73"],"no-whitespace-before-property",[],"rest-spread-spacing",[],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.","ArrayExpression",["74"],"@typescript-eslint/no-unused-vars","'ClassNames' is defined but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'fetchImages', 'savedImgPath', and 'srcImg'. Either include them or remove the dependency array.",["75"],"no-object-constructor",{"desc":"76","fix":"77"},{"desc":"78","fix":"79"},"Update the dependencies array to be: [navigate]",{"range":"80","text":"81"},"Update the dependencies array to be: [fetchImages, savedImgPath, srcImg]",{"range":"82","text":"83"},[1652,1654],"[navigate]",[1081,1083],"[fetchImages, savedImgPath, srcImg]"]